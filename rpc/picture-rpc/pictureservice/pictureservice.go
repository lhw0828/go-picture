// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: picture.proto

package pictureservice

import (
	"context"

	"picture/rpc/picture-rpc/picture"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeletePictureRequest       = picture.DeletePictureRequest
	DeletePictureResponse      = picture.DeletePictureResponse
	EditPictureByBatchRequest  = picture.EditPictureByBatchRequest
	EditPictureByBatchResponse = picture.EditPictureByBatchResponse
	EditPictureRequest         = picture.EditPictureRequest
	EditPictureResponse        = picture.EditPictureResponse
	GetPictureRequest          = picture.GetPictureRequest
	GetPictureResponse         = picture.GetPictureResponse
	ListPictureRequest         = picture.ListPictureRequest
	ListPictureResponse        = picture.ListPictureResponse
	Picture                    = picture.Picture
	ReviewPictureRequest       = picture.ReviewPictureRequest
	ReviewPictureResponse      = picture.ReviewPictureResponse
	UploadPictureRequest       = picture.UploadPictureRequest
	UploadPictureResponse      = picture.UploadPictureResponse

	PictureService interface {
		// 上传图片
		UploadPicture(ctx context.Context, in *UploadPictureRequest, opts ...grpc.CallOption) (*UploadPictureResponse, error)
		// 获取图片信息
		GetPicture(ctx context.Context, in *GetPictureRequest, opts ...grpc.CallOption) (*GetPictureResponse, error)
		// 编辑图片
		EditPicture(ctx context.Context, in *EditPictureRequest, opts ...grpc.CallOption) (*EditPictureResponse, error)
		// 删除图片
		DeletePicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*DeletePictureResponse, error)
		// 图片审核
		ReviewPicture(ctx context.Context, in *ReviewPictureRequest, opts ...grpc.CallOption) (*ReviewPictureResponse, error)
		// 批量编辑图片
		EditPictureByBatch(ctx context.Context, in *EditPictureByBatchRequest, opts ...grpc.CallOption) (*EditPictureByBatchResponse, error)
		// 分页获取图片列表
		ListPicture(ctx context.Context, in *ListPictureRequest, opts ...grpc.CallOption) (*ListPictureResponse, error)
	}

	defaultPictureService struct {
		cli zrpc.Client
	}
)

func NewPictureService(cli zrpc.Client) PictureService {
	return &defaultPictureService{
		cli: cli,
	}
}

// 上传图片
func (m *defaultPictureService) UploadPicture(ctx context.Context, in *UploadPictureRequest, opts ...grpc.CallOption) (*UploadPictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.UploadPicture(ctx, in, opts...)
}

// 获取图片信息
func (m *defaultPictureService) GetPicture(ctx context.Context, in *GetPictureRequest, opts ...grpc.CallOption) (*GetPictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.GetPicture(ctx, in, opts...)
}

// 编辑图片
func (m *defaultPictureService) EditPicture(ctx context.Context, in *EditPictureRequest, opts ...grpc.CallOption) (*EditPictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.EditPicture(ctx, in, opts...)
}

// 删除图片
func (m *defaultPictureService) DeletePicture(ctx context.Context, in *DeletePictureRequest, opts ...grpc.CallOption) (*DeletePictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.DeletePicture(ctx, in, opts...)
}

// 图片审核
func (m *defaultPictureService) ReviewPicture(ctx context.Context, in *ReviewPictureRequest, opts ...grpc.CallOption) (*ReviewPictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.ReviewPicture(ctx, in, opts...)
}

// 批量编辑图片
func (m *defaultPictureService) EditPictureByBatch(ctx context.Context, in *EditPictureByBatchRequest, opts ...grpc.CallOption) (*EditPictureByBatchResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.EditPictureByBatch(ctx, in, opts...)
}

// 分页获取图片列表
func (m *defaultPictureService) ListPicture(ctx context.Context, in *ListPictureRequest, opts ...grpc.CallOption) (*ListPictureResponse, error) {
	client := picture.NewPictureServiceClient(m.cli.Conn())
	return client.ListPicture(ctx, in, opts...)
}
