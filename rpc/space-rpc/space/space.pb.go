// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.3
// source: space.proto

package space

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 基础响应
type BaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	mi := &file_space_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

func (x *BaseResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BaseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 创建空间请求
type CreateSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceName     string                 `protobuf:"bytes,1,opt,name=spaceName,proto3" json:"spaceName,omitempty"`    // 空间名称
	SpaceType     int32                  `protobuf:"varint,2,opt,name=spaceType,proto3" json:"spaceType,omitempty"`   // 空间类型：0-私有 1-团队
	SpaceLevel    int32                  `protobuf:"varint,3,opt,name=spaceLevel,proto3" json:"spaceLevel,omitempty"` // 空间级别：0-普通版 1-专业版 2-旗舰版
	UserId        int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`         // 创建者ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpaceRequest) Reset() {
	*x = CreateSpaceRequest{}
	mi := &file_space_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceRequest) ProtoMessage() {}

func (x *CreateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceRequest.ProtoReflect.Descriptor instead.
func (*CreateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *CreateSpaceRequest) GetSpaceType() int32 {
	if x != nil {
		return x.SpaceType
	}
	return 0
}

func (x *CreateSpaceRequest) GetSpaceLevel() int32 {
	if x != nil {
		return x.SpaceLevel
	}
	return 0
}

func (x *CreateSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 空间信息
type SpaceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceName     string                 `protobuf:"bytes,2,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpaceLevel    int32                  `protobuf:"varint,3,opt,name=spaceLevel,proto3" json:"spaceLevel,omitempty"`
	SpaceType     int32                  `protobuf:"varint,4,opt,name=spaceType,proto3" json:"spaceType,omitempty"`
	MaxSize       int64                  `protobuf:"varint,5,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	MaxCount      int64                  `protobuf:"varint,6,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	TotalSize     int64                  `protobuf:"varint,7,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
	TotalCount    int64                  `protobuf:"varint,8,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	UserId        int64                  `protobuf:"varint,9,opt,name=userId,proto3" json:"userId,omitempty"`
	CreateTime    string                 `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string                 `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceInfo) Reset() {
	*x = SpaceInfo{}
	mi := &file_space_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfo) ProtoMessage() {}

func (x *SpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfo.ProtoReflect.Descriptor instead.
func (*SpaceInfo) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

func (x *SpaceInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceInfo) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *SpaceInfo) GetSpaceLevel() int32 {
	if x != nil {
		return x.SpaceLevel
	}
	return 0
}

func (x *SpaceInfo) GetSpaceType() int32 {
	if x != nil {
		return x.SpaceType
	}
	return 0
}

func (x *SpaceInfo) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *SpaceInfo) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *SpaceInfo) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *SpaceInfo) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SpaceInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SpaceInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 获取空间请求
type GetSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceRequest) Reset() {
	*x = GetSpaceRequest{}
	mi := &file_space_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceRequest) ProtoMessage() {}

func (x *GetSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceRequest.ProtoReflect.Descriptor instead.
func (*GetSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 更新空间请求
type UpdateSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceName     string                 `protobuf:"bytes,2,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpaceLevel    int32                  `protobuf:"varint,3,opt,name=spaceLevel,proto3" json:"spaceLevel,omitempty"`
	MaxSize       int64                  `protobuf:"varint,4,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	MaxCount      int64                  `protobuf:"varint,5,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	UserId        int64                  `protobuf:"varint,6,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSpaceRequest) Reset() {
	*x = UpdateSpaceRequest{}
	mi := &file_space_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceRequest) ProtoMessage() {}

func (x *UpdateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSpaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *UpdateSpaceRequest) GetSpaceLevel() int32 {
	if x != nil {
		return x.SpaceLevel
	}
	return 0
}

func (x *UpdateSpaceRequest) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *UpdateSpaceRequest) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *UpdateSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 删除空间请求
type DeleteSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpaceRequest) Reset() {
	*x = DeleteSpaceRequest{}
	mi := &file_space_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceRequest) ProtoMessage() {}

func (x *DeleteSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSpaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取空间列表请求
type ListSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Current       int64                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SpaceName     string                 `protobuf:"bytes,3,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpaceType     int32                  `protobuf:"varint,4,opt,name=spaceType,proto3" json:"spaceType,omitempty"`
	UserId        int64                  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceRequest) Reset() {
	*x = ListSpaceRequest{}
	mi := &file_space_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceRequest) ProtoMessage() {}

func (x *ListSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceRequest.ProtoReflect.Descriptor instead.
func (*ListSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{6}
}

func (x *ListSpaceRequest) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListSpaceRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *ListSpaceRequest) GetSpaceType() int32 {
	if x != nil {
		return x.SpaceType
	}
	return 0
}

func (x *ListSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取空间列表响应
type ListSpaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*SpaceInfo           `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Current       int64                  `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	PageSize      int64                  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceResponse) Reset() {
	*x = ListSpaceResponse{}
	mi := &file_space_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceResponse) ProtoMessage() {}

func (x *ListSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceResponse.ProtoReflect.Descriptor instead.
func (*ListSpaceResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{7}
}

func (x *ListSpaceResponse) GetList() []*SpaceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListSpaceResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSpaceResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListSpaceResponse) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取空间成员列表请求
type ListSpaceMembersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceMembersRequest) Reset() {
	*x = ListSpaceMembersRequest{}
	mi := &file_space_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceMembersRequest) ProtoMessage() {}

func (x *ListSpaceMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceMembersRequest.ProtoReflect.Descriptor instead.
func (*ListSpaceMembersRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{8}
}

func (x *ListSpaceMembersRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

// 获取空间成员列表响应
type ListSpaceMembersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []*SpaceMember         `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceMembersResponse) Reset() {
	*x = ListSpaceMembersResponse{}
	mi := &file_space_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceMembersResponse) ProtoMessage() {}

func (x *ListSpaceMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceMembersResponse.ProtoReflect.Descriptor instead.
func (*ListSpaceMembersResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{9}
}

func (x *ListSpaceMembersResponse) GetMembers() []*SpaceMember {
	if x != nil {
		return x.Members
	}
	return nil
}

// 空间成员信息
type SpaceMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId       int64                  `protobuf:"varint,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName      string                 `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAvatar    string                 `protobuf:"bytes,5,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	SpaceRole     string                 `protobuf:"bytes,6,opt,name=spaceRole,proto3" json:"spaceRole,omitempty"`
	CreateTime    string                 `protobuf:"bytes,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceMember) Reset() {
	*x = SpaceMember{}
	mi := &file_space_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMember) ProtoMessage() {}

func (x *SpaceMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMember.ProtoReflect.Descriptor instead.
func (*SpaceMember) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{10}
}

func (x *SpaceMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceMember) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceMember) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceMember) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SpaceMember) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *SpaceMember) GetSpaceRole() string {
	if x != nil {
		return x.SpaceRole
	}
	return ""
}

func (x *SpaceMember) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 获取空间分析请求
type GetSpaceAnalysisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	TimeRange     string                 `protobuf:"bytes,2,opt,name=timeRange,proto3" json:"timeRange,omitempty"` // day/week/month
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceAnalysisRequest) Reset() {
	*x = GetSpaceAnalysisRequest{}
	mi := &file_space_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceAnalysisRequest) ProtoMessage() {}

func (x *GetSpaceAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceAnalysisRequest.ProtoReflect.Descriptor instead.
func (*GetSpaceAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{11}
}

func (x *GetSpaceAnalysisRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetSpaceAnalysisRequest) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

// 空间使用趋势
type SpaceUsageTrend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Usage         int64                  `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceUsageTrend) Reset() {
	*x = SpaceUsageTrend{}
	mi := &file_space_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceUsageTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceUsageTrend) ProtoMessage() {}

func (x *SpaceUsageTrend) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceUsageTrend.ProtoReflect.Descriptor instead.
func (*SpaceUsageTrend) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{12}
}

func (x *SpaceUsageTrend) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SpaceUsageTrend) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// 空间分析响应
type SpaceAnalysis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usage         *SpaceUsage            `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	Categories    []*CategoryCount       `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	Tags          []*TagCount            `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	SizeRanges    []*SizeCount           `protobuf:"bytes,4,rep,name=sizeRanges,proto3" json:"sizeRanges,omitempty"`
	Trends        []*SpaceUsageTrend     `protobuf:"bytes,5,rep,name=trends,proto3" json:"trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceAnalysis) Reset() {
	*x = SpaceAnalysis{}
	mi := &file_space_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceAnalysis) ProtoMessage() {}

func (x *SpaceAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceAnalysis.ProtoReflect.Descriptor instead.
func (*SpaceAnalysis) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{13}
}

func (x *SpaceAnalysis) GetUsage() *SpaceUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *SpaceAnalysis) GetCategories() []*CategoryCount {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *SpaceAnalysis) GetTags() []*TagCount {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SpaceAnalysis) GetSizeRanges() []*SizeCount {
	if x != nil {
		return x.SizeRanges
	}
	return nil
}

func (x *SpaceAnalysis) GetTrends() []*SpaceUsageTrend {
	if x != nil {
		return x.Trends
	}
	return nil
}

// 空间使用情况
type SpaceUsage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UsedSize        int64                  `protobuf:"varint,1,opt,name=usedSize,proto3" json:"usedSize,omitempty"`
	MaxSize         int64                  `protobuf:"varint,2,opt,name=maxSize,proto3" json:"maxSize,omitempty"`
	SizeUsageRatio  float64                `protobuf:"fixed64,3,opt,name=sizeUsageRatio,proto3" json:"sizeUsageRatio,omitempty"`
	UsedCount       int64                  `protobuf:"varint,4,opt,name=usedCount,proto3" json:"usedCount,omitempty"`
	MaxCount        int64                  `protobuf:"varint,5,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	CountUsageRatio float64                `protobuf:"fixed64,6,opt,name=countUsageRatio,proto3" json:"countUsageRatio,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SpaceUsage) Reset() {
	*x = SpaceUsage{}
	mi := &file_space_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceUsage) ProtoMessage() {}

func (x *SpaceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceUsage.ProtoReflect.Descriptor instead.
func (*SpaceUsage) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{14}
}

func (x *SpaceUsage) GetUsedSize() int64 {
	if x != nil {
		return x.UsedSize
	}
	return 0
}

func (x *SpaceUsage) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *SpaceUsage) GetSizeUsageRatio() float64 {
	if x != nil {
		return x.SizeUsageRatio
	}
	return 0
}

func (x *SpaceUsage) GetUsedCount() int64 {
	if x != nil {
		return x.UsedCount
	}
	return 0
}

func (x *SpaceUsage) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *SpaceUsage) GetCountUsageRatio() float64 {
	if x != nil {
		return x.CountUsageRatio
	}
	return 0
}

// 分类统计
type CategoryCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	TotalSize     int64                  `protobuf:"varint,3,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryCount) Reset() {
	*x = CategoryCount{}
	mi := &file_space_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryCount) ProtoMessage() {}

func (x *CategoryCount) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryCount.ProtoReflect.Descriptor instead.
func (*CategoryCount) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{15}
}

func (x *CategoryCount) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CategoryCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CategoryCount) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// 标签统计
type TagCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           string                 `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagCount) Reset() {
	*x = TagCount{}
	mi := &file_space_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagCount) ProtoMessage() {}

func (x *TagCount) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagCount.ProtoReflect.Descriptor instead.
func (*TagCount) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{16}
}

func (x *TagCount) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TagCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 大小范围统计
type SizeCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SizeRange     string                 `protobuf:"bytes,1,opt,name=sizeRange,proto3" json:"sizeRange,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SizeCount) Reset() {
	*x = SizeCount{}
	mi := &file_space_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SizeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SizeCount) ProtoMessage() {}

func (x *SizeCount) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SizeCount.ProtoReflect.Descriptor instead.
func (*SizeCount) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{17}
}

func (x *SizeCount) GetSizeRange() string {
	if x != nil {
		return x.SizeRange
	}
	return ""
}

func (x *SizeCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 获取空间权限请求
type GetSpacePermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpacePermissionsRequest) Reset() {
	*x = GetSpacePermissionsRequest{}
	mi := &file_space_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpacePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpacePermissionsRequest) ProtoMessage() {}

func (x *GetSpacePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpacePermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetSpacePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{18}
}

func (x *GetSpacePermissionsRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetSpacePermissionsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 获取空间权限响应
type GetSpacePermissionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Permissions   []string               `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpacePermissionsResponse) Reset() {
	*x = GetSpacePermissionsResponse{}
	mi := &file_space_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpacePermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpacePermissionsResponse) ProtoMessage() {}

func (x *GetSpacePermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpacePermissionsResponse.ProtoReflect.Descriptor instead.
func (*GetSpacePermissionsResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{19}
}

func (x *GetSpacePermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	UserAvatar    string                 `protobuf:"bytes,3,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	UserRole      string                 `protobuf:"bytes,4,opt,name=userRole,proto3" json:"userRole,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_space_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{20}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *UserInfo) GetUserRole() string {
	if x != nil {
		return x.UserRole
	}
	return ""
}

type GetSpaceVORequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceVORequest) Reset() {
	*x = GetSpaceVORequest{}
	mi := &file_space_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceVORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceVORequest) ProtoMessage() {}

func (x *GetSpaceVORequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceVORequest.ProtoReflect.Descriptor instead.
func (*GetSpaceVORequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{21}
}

func (x *GetSpaceVORequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSpaceVORequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SpaceVO struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceInfo     *SpaceInfo             `protobuf:"bytes,1,opt,name=space_info,json=spaceInfo,proto3" json:"space_info,omitempty"`
	User          *UserInfo              `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Permissions   []string               `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceVO) Reset() {
	*x = SpaceVO{}
	mi := &file_space_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceVO) ProtoMessage() {}

func (x *SpaceVO) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceVO.ProtoReflect.Descriptor instead.
func (*SpaceVO) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{22}
}

func (x *SpaceVO) GetSpaceInfo() *SpaceInfo {
	if x != nil {
		return x.SpaceInfo
	}
	return nil
}

func (x *SpaceVO) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SpaceVO) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_space_proto protoreflect.FileDescriptor

var file_space_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x34, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x88, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc3, 0x02, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61,
	0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x33,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xc9, 0x01,
	0x0a, 0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x0f,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0d, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x74, 0x72, 0x65, 0x6e, 0x64,
	0x73, 0x22, 0xce, 0x01, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x69, 0x7a, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x73, 0x69, 0x7a, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x22, 0x5f, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3f, 0x0a, 0x09, 0x53, 0x69, 0x7a, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x72, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22,
	0x3c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x4f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01,
	0x0a, 0x07, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x4f, 0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x32, 0xf3, 0x04, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x12, 0x5c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x4f, 0x12, 0x18, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x4f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x4f, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_proto_rawDescOnce sync.Once
	file_space_proto_rawDescData = file_space_proto_rawDesc
)

func file_space_proto_rawDescGZIP() []byte {
	file_space_proto_rawDescOnce.Do(func() {
		file_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_proto_rawDescData)
	})
	return file_space_proto_rawDescData
}

var file_space_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_space_proto_goTypes = []any{
	(*BaseResponse)(nil),                // 0: space.BaseResponse
	(*CreateSpaceRequest)(nil),          // 1: space.CreateSpaceRequest
	(*SpaceInfo)(nil),                   // 2: space.SpaceInfo
	(*GetSpaceRequest)(nil),             // 3: space.GetSpaceRequest
	(*UpdateSpaceRequest)(nil),          // 4: space.UpdateSpaceRequest
	(*DeleteSpaceRequest)(nil),          // 5: space.DeleteSpaceRequest
	(*ListSpaceRequest)(nil),            // 6: space.ListSpaceRequest
	(*ListSpaceResponse)(nil),           // 7: space.ListSpaceResponse
	(*ListSpaceMembersRequest)(nil),     // 8: space.ListSpaceMembersRequest
	(*ListSpaceMembersResponse)(nil),    // 9: space.ListSpaceMembersResponse
	(*SpaceMember)(nil),                 // 10: space.SpaceMember
	(*GetSpaceAnalysisRequest)(nil),     // 11: space.GetSpaceAnalysisRequest
	(*SpaceUsageTrend)(nil),             // 12: space.SpaceUsageTrend
	(*SpaceAnalysis)(nil),               // 13: space.SpaceAnalysis
	(*SpaceUsage)(nil),                  // 14: space.SpaceUsage
	(*CategoryCount)(nil),               // 15: space.CategoryCount
	(*TagCount)(nil),                    // 16: space.TagCount
	(*SizeCount)(nil),                   // 17: space.SizeCount
	(*GetSpacePermissionsRequest)(nil),  // 18: space.GetSpacePermissionsRequest
	(*GetSpacePermissionsResponse)(nil), // 19: space.GetSpacePermissionsResponse
	(*UserInfo)(nil),                    // 20: space.UserInfo
	(*GetSpaceVORequest)(nil),           // 21: space.GetSpaceVORequest
	(*SpaceVO)(nil),                     // 22: space.SpaceVO
}
var file_space_proto_depIdxs = []int32{
	2,  // 0: space.ListSpaceResponse.list:type_name -> space.SpaceInfo
	10, // 1: space.ListSpaceMembersResponse.members:type_name -> space.SpaceMember
	14, // 2: space.SpaceAnalysis.usage:type_name -> space.SpaceUsage
	15, // 3: space.SpaceAnalysis.categories:type_name -> space.CategoryCount
	16, // 4: space.SpaceAnalysis.tags:type_name -> space.TagCount
	17, // 5: space.SpaceAnalysis.sizeRanges:type_name -> space.SizeCount
	12, // 6: space.SpaceAnalysis.trends:type_name -> space.SpaceUsageTrend
	2,  // 7: space.SpaceVO.space_info:type_name -> space.SpaceInfo
	20, // 8: space.SpaceVO.user:type_name -> space.UserInfo
	1,  // 9: space.SpaceService.CreateSpace:input_type -> space.CreateSpaceRequest
	3,  // 10: space.SpaceService.GetSpace:input_type -> space.GetSpaceRequest
	4,  // 11: space.SpaceService.UpdateSpace:input_type -> space.UpdateSpaceRequest
	5,  // 12: space.SpaceService.DeleteSpace:input_type -> space.DeleteSpaceRequest
	6,  // 13: space.SpaceService.ListSpace:input_type -> space.ListSpaceRequest
	8,  // 14: space.SpaceService.ListSpaceMembers:input_type -> space.ListSpaceMembersRequest
	11, // 15: space.SpaceService.GetSpaceAnalysis:input_type -> space.GetSpaceAnalysisRequest
	18, // 16: space.SpaceService.GetSpacePermissions:input_type -> space.GetSpacePermissionsRequest
	21, // 17: space.SpaceService.GetSpaceVO:input_type -> space.GetSpaceVORequest
	2,  // 18: space.SpaceService.CreateSpace:output_type -> space.SpaceInfo
	2,  // 19: space.SpaceService.GetSpace:output_type -> space.SpaceInfo
	0,  // 20: space.SpaceService.UpdateSpace:output_type -> space.BaseResponse
	0,  // 21: space.SpaceService.DeleteSpace:output_type -> space.BaseResponse
	7,  // 22: space.SpaceService.ListSpace:output_type -> space.ListSpaceResponse
	9,  // 23: space.SpaceService.ListSpaceMembers:output_type -> space.ListSpaceMembersResponse
	13, // 24: space.SpaceService.GetSpaceAnalysis:output_type -> space.SpaceAnalysis
	19, // 25: space.SpaceService.GetSpacePermissions:output_type -> space.GetSpacePermissionsResponse
	22, // 26: space.SpaceService.GetSpaceVO:output_type -> space.SpaceVO
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_space_proto_init() }
func file_space_proto_init() {
	if File_space_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_proto_goTypes,
		DependencyIndexes: file_space_proto_depIdxs,
		MessageInfos:      file_space_proto_msgTypes,
	}.Build()
	File_space_proto = out.File
	file_space_proto_rawDesc = nil
	file_space_proto_goTypes = nil
	file_space_proto_depIdxs = nil
}
