// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.3
// source: space.proto

package space

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建空间请求
type CreateSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceName     string                 `protobuf:"bytes,1,opt,name=spaceName,proto3" json:"spaceName,omitempty"`   // 空间名称
	SpaceDesc     string                 `protobuf:"bytes,2,opt,name=spaceDesc,proto3" json:"spaceDesc,omitempty"`   // 空间描述
	SpaceType     string                 `protobuf:"bytes,3,opt,name=spaceType,proto3" json:"spaceType,omitempty"`   // 空间类型：private/team
	SpaceLevel    string                 `protobuf:"bytes,4,opt,name=spaceLevel,proto3" json:"spaceLevel,omitempty"` // 空间级别：normal/pro/premium
	UserId        int64                  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`        // 创建者ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpaceRequest) Reset() {
	*x = CreateSpaceRequest{}
	mi := &file_space_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceRequest) ProtoMessage() {}

func (x *CreateSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceRequest.ProtoReflect.Descriptor instead.
func (*CreateSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSpaceRequest) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *CreateSpaceRequest) GetSpaceDesc() string {
	if x != nil {
		return x.SpaceDesc
	}
	return ""
}

func (x *CreateSpaceRequest) GetSpaceType() string {
	if x != nil {
		return x.SpaceType
	}
	return ""
}

func (x *CreateSpaceRequest) GetSpaceLevel() string {
	if x != nil {
		return x.SpaceLevel
	}
	return ""
}

func (x *CreateSpaceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// 创建空间响应
type CreateSpaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 空间ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSpaceResponse) Reset() {
	*x = CreateSpaceResponse{}
	mi := &file_space_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceResponse) ProtoMessage() {}

func (x *CreateSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceResponse.ProtoReflect.Descriptor instead.
func (*CreateSpaceResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSpaceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取空间信息请求
type GetSpaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceRequest) Reset() {
	*x = GetSpaceRequest{}
	mi := &file_space_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceRequest) ProtoMessage() {}

func (x *GetSpaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceRequest.ProtoReflect.Descriptor instead.
func (*GetSpaceRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{2}
}

func (x *GetSpaceRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 获取空间信息响应
type GetSpaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceName     string                 `protobuf:"bytes,2,opt,name=spaceName,proto3" json:"spaceName,omitempty"`
	SpaceLevel    int32                  `protobuf:"varint,3,opt,name=spaceLevel,proto3" json:"spaceLevel,omitempty"` // 0-普通版 1-专业版 2-旗舰版
	SpaceType     int32                  `protobuf:"varint,4,opt,name=spaceType,proto3" json:"spaceType,omitempty"`   // 0-私有 1-团队
	MaxSize       int64                  `protobuf:"varint,5,opt,name=maxSize,proto3" json:"maxSize,omitempty"`       // 最大总大小
	MaxCount      int64                  `protobuf:"varint,6,opt,name=maxCount,proto3" json:"maxCount,omitempty"`     // 最大数量
	TotalSize     int64                  `protobuf:"varint,7,opt,name=totalSize,proto3" json:"totalSize,omitempty"`   // 当前总大小
	TotalCount    int64                  `protobuf:"varint,8,opt,name=totalCount,proto3" json:"totalCount,omitempty"` // 当前数量
	UserId        int64                  `protobuf:"varint,9,opt,name=userId,proto3" json:"userId,omitempty"`
	CreateTime    string                 `protobuf:"bytes,10,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime    string                 `protobuf:"bytes,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceResponse) Reset() {
	*x = GetSpaceResponse{}
	mi := &file_space_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceResponse) ProtoMessage() {}

func (x *GetSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceResponse.ProtoReflect.Descriptor instead.
func (*GetSpaceResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpaceResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSpaceResponse) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *GetSpaceResponse) GetSpaceLevel() int32 {
	if x != nil {
		return x.SpaceLevel
	}
	return 0
}

func (x *GetSpaceResponse) GetSpaceType() int32 {
	if x != nil {
		return x.SpaceType
	}
	return 0
}

func (x *GetSpaceResponse) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *GetSpaceResponse) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *GetSpaceResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetSpaceResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetSpaceResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetSpaceResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *GetSpaceResponse) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 添加空间成员请求
type AddSpaceMemberRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Role          string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"` // admin/member
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSpaceMemberRequest) Reset() {
	*x = AddSpaceMemberRequest{}
	mi := &file_space_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpaceMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceMemberRequest) ProtoMessage() {}

func (x *AddSpaceMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceMemberRequest.ProtoReflect.Descriptor instead.
func (*AddSpaceMemberRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{4}
}

func (x *AddSpaceMemberRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *AddSpaceMemberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddSpaceMemberRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

// 添加空间成员响应
type AddSpaceMemberResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSpaceMemberResponse) Reset() {
	*x = AddSpaceMemberResponse{}
	mi := &file_space_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSpaceMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceMemberResponse) ProtoMessage() {}

func (x *AddSpaceMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceMemberResponse.ProtoReflect.Descriptor instead.
func (*AddSpaceMemberResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{5}
}

func (x *AddSpaceMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 获取空间成员列表请求
type ListSpaceMembersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceMembersRequest) Reset() {
	*x = ListSpaceMembersRequest{}
	mi := &file_space_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceMembersRequest) ProtoMessage() {}

func (x *ListSpaceMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceMembersRequest.ProtoReflect.Descriptor instead.
func (*ListSpaceMembersRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{6}
}

func (x *ListSpaceMembersRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

// 空间成员信息
type SpaceMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SpaceId       int64                  `protobuf:"varint,2,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName      string                 `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAvatar    string                 `protobuf:"bytes,5,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	Role          string                 `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	JoinTime      string                 `protobuf:"bytes,7,opt,name=joinTime,proto3" json:"joinTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceMember) Reset() {
	*x = SpaceMember{}
	mi := &file_space_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMember) ProtoMessage() {}

func (x *SpaceMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMember.ProtoReflect.Descriptor instead.
func (*SpaceMember) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpaceMember) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *SpaceMember) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SpaceMember) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SpaceMember) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *SpaceMember) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *SpaceMember) GetJoinTime() string {
	if x != nil {
		return x.JoinTime
	}
	return ""
}

// 获取空间成员列表响应
type ListSpaceMembersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Members       []*SpaceMember         `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSpaceMembersResponse) Reset() {
	*x = ListSpaceMembersResponse{}
	mi := &file_space_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSpaceMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceMembersResponse) ProtoMessage() {}

func (x *ListSpaceMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceMembersResponse.ProtoReflect.Descriptor instead.
func (*ListSpaceMembersResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{8}
}

func (x *ListSpaceMembersResponse) GetMembers() []*SpaceMember {
	if x != nil {
		return x.Members
	}
	return nil
}

// 更新空间使用容量请求
type UpdateSpaceUsageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`          // 变更的容量大小（字节）
	Operation     string                 `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"` // add/subtract
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSpaceUsageRequest) Reset() {
	*x = UpdateSpaceUsageRequest{}
	mi := &file_space_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpaceUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceUsageRequest) ProtoMessage() {}

func (x *UpdateSpaceUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceUsageRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpaceUsageRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSpaceUsageRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *UpdateSpaceUsageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateSpaceUsageRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

// 更新空间使用容量响应
type UpdateSpaceUsageResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RemainingCapacity int64                  `protobuf:"varint,2,opt,name=remainingCapacity,proto3" json:"remainingCapacity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateSpaceUsageResponse) Reset() {
	*x = UpdateSpaceUsageResponse{}
	mi := &file_space_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSpaceUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceUsageResponse) ProtoMessage() {}

func (x *UpdateSpaceUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceUsageResponse.ProtoReflect.Descriptor instead.
func (*UpdateSpaceUsageResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateSpaceUsageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSpaceUsageResponse) GetRemainingCapacity() int64 {
	if x != nil {
		return x.RemainingCapacity
	}
	return 0
}

// 空间使用趋势
type SpaceUsageTrend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Usage         int64                  `protobuf:"varint,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpaceUsageTrend) Reset() {
	*x = SpaceUsageTrend{}
	mi := &file_space_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpaceUsageTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceUsageTrend) ProtoMessage() {}

func (x *SpaceUsageTrend) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceUsageTrend.ProtoReflect.Descriptor instead.
func (*SpaceUsageTrend) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{11}
}

func (x *SpaceUsageTrend) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SpaceUsageTrend) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// 获取空间分析请求
type GetSpaceAnalysisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpaceId       int64                  `protobuf:"varint,1,opt,name=spaceId,proto3" json:"spaceId,omitempty"`
	TimeRange     string                 `protobuf:"bytes,2,opt,name=timeRange,proto3" json:"timeRange,omitempty"` // day/week/month
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpaceAnalysisRequest) Reset() {
	*x = GetSpaceAnalysisRequest{}
	mi := &file_space_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceAnalysisRequest) ProtoMessage() {}

func (x *GetSpaceAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceAnalysisRequest.ProtoReflect.Descriptor instead.
func (*GetSpaceAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{12}
}

func (x *GetSpaceAnalysisRequest) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *GetSpaceAnalysisRequest) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

// 获取空间分析响应
type GetSpaceAnalysisResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalFiles           int64                  `protobuf:"varint,1,opt,name=totalFiles,proto3" json:"totalFiles,omitempty"`
	TotalSize            int64                  `protobuf:"varint,2,opt,name=totalSize,proto3" json:"totalSize,omitempty"`
	UsageTrends          []*SpaceUsageTrend     `protobuf:"bytes,3,rep,name=usageTrends,proto3" json:"usageTrends,omitempty"`
	FileTypeDistribution map[string]int64       `protobuf:"bytes,4,rep,name=fileTypeDistribution,proto3" json:"fileTypeDistribution,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetSpaceAnalysisResponse) Reset() {
	*x = GetSpaceAnalysisResponse{}
	mi := &file_space_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpaceAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceAnalysisResponse) ProtoMessage() {}

func (x *GetSpaceAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_space_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceAnalysisResponse.ProtoReflect.Descriptor instead.
func (*GetSpaceAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_space_proto_rawDescGZIP(), []int{13}
}

func (x *GetSpaceAnalysisResponse) GetTotalFiles() int64 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *GetSpaceAnalysisResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetSpaceAnalysisResponse) GetUsageTrends() []*SpaceUsageTrend {
	if x != nil {
		return x.UsageTrends
	}
	return nil
}

func (x *GetSpaceAnalysisResponse) GetFileTypeDistribution() map[string]int64 {
	if x != nil {
		return x.FileTypeDistribution
	}
	return nil
}

var File_space_proto protoreflect.FileDescriptor

var file_space_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a,
	0x0b, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x18, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x22,
	0x3b, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22,
	0xca, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x0b, 0x75, 0x73, 0x61, 0x67, 0x65, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x6d, 0x0a, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x19, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xdf, 0x03, 0x0a,
	0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a,
	0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x1e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_space_proto_rawDescOnce sync.Once
	file_space_proto_rawDescData = file_space_proto_rawDesc
)

func file_space_proto_rawDescGZIP() []byte {
	file_space_proto_rawDescOnce.Do(func() {
		file_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_proto_rawDescData)
	})
	return file_space_proto_rawDescData
}

var file_space_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_space_proto_goTypes = []any{
	(*CreateSpaceRequest)(nil),       // 0: space.CreateSpaceRequest
	(*CreateSpaceResponse)(nil),      // 1: space.CreateSpaceResponse
	(*GetSpaceRequest)(nil),          // 2: space.GetSpaceRequest
	(*GetSpaceResponse)(nil),         // 3: space.GetSpaceResponse
	(*AddSpaceMemberRequest)(nil),    // 4: space.AddSpaceMemberRequest
	(*AddSpaceMemberResponse)(nil),   // 5: space.AddSpaceMemberResponse
	(*ListSpaceMembersRequest)(nil),  // 6: space.ListSpaceMembersRequest
	(*SpaceMember)(nil),              // 7: space.SpaceMember
	(*ListSpaceMembersResponse)(nil), // 8: space.ListSpaceMembersResponse
	(*UpdateSpaceUsageRequest)(nil),  // 9: space.UpdateSpaceUsageRequest
	(*UpdateSpaceUsageResponse)(nil), // 10: space.UpdateSpaceUsageResponse
	(*SpaceUsageTrend)(nil),          // 11: space.SpaceUsageTrend
	(*GetSpaceAnalysisRequest)(nil),  // 12: space.GetSpaceAnalysisRequest
	(*GetSpaceAnalysisResponse)(nil), // 13: space.GetSpaceAnalysisResponse
	nil,                              // 14: space.GetSpaceAnalysisResponse.FileTypeDistributionEntry
}
var file_space_proto_depIdxs = []int32{
	7,  // 0: space.ListSpaceMembersResponse.members:type_name -> space.SpaceMember
	11, // 1: space.GetSpaceAnalysisResponse.usageTrends:type_name -> space.SpaceUsageTrend
	14, // 2: space.GetSpaceAnalysisResponse.fileTypeDistribution:type_name -> space.GetSpaceAnalysisResponse.FileTypeDistributionEntry
	0,  // 3: space.SpaceService.CreateSpace:input_type -> space.CreateSpaceRequest
	2,  // 4: space.SpaceService.GetSpace:input_type -> space.GetSpaceRequest
	4,  // 5: space.SpaceService.AddSpaceMember:input_type -> space.AddSpaceMemberRequest
	6,  // 6: space.SpaceService.ListSpaceMembers:input_type -> space.ListSpaceMembersRequest
	9,  // 7: space.SpaceService.UpdateSpaceUsage:input_type -> space.UpdateSpaceUsageRequest
	12, // 8: space.SpaceService.GetSpaceAnalysis:input_type -> space.GetSpaceAnalysisRequest
	1,  // 9: space.SpaceService.CreateSpace:output_type -> space.CreateSpaceResponse
	3,  // 10: space.SpaceService.GetSpace:output_type -> space.GetSpaceResponse
	5,  // 11: space.SpaceService.AddSpaceMember:output_type -> space.AddSpaceMemberResponse
	8,  // 12: space.SpaceService.ListSpaceMembers:output_type -> space.ListSpaceMembersResponse
	10, // 13: space.SpaceService.UpdateSpaceUsage:output_type -> space.UpdateSpaceUsageResponse
	13, // 14: space.SpaceService.GetSpaceAnalysis:output_type -> space.GetSpaceAnalysisResponse
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_space_proto_init() }
func file_space_proto_init() {
	if File_space_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_proto_goTypes,
		DependencyIndexes: file_space_proto_depIdxs,
		MessageInfos:      file_space_proto_msgTypes,
	}.Build()
	File_space_proto = out.File
	file_space_proto_rawDesc = nil
	file_space_proto_goTypes = nil
	file_space_proto_depIdxs = nil
}
