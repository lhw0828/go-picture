syntax = "v1"

info (
	title:   "Picture Service"
	desc:    "Picture Management System API"
	author:  "lhw"
	version: "v1"
)

// 用户登录
type (
	LoginReq {
		UserAccount  string `json:"userAccount"`
		UserPassword string `json:"userPassword"`
	}
	LoginResp {
		Id          int64  `json:"id"`
		UserAccount string `json:"userAccount"`
		UserName    string `json:"userName"`
		UserAvatar  string `json:"userAvatar,optional"`
		UserProfile string `json:"userProfile,optional"`
		UserRole    string `json:"userRole"`
		AccessToken string `json:"accessToken"`
	}
)

// 用户注册
type (
	RegisterReq {
		UserAccount   string `json:"userAccount"`
		UserPassword  string `json:"userPassword"`
		CheckPassword string `json:"checkPassword"`
	}
	RegisterResp {
		Id int64 `json:"id"`
	}
)

@server (
	prefix: api/v1
)
service user {
	@doc "用户登录"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)

	@doc "用户注册"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)
}

@server (
	jwt:    Auth
	prefix: api/v1
)
service user {
	@doc "获取当前用户信息"
	@handler getCurrentUser
	get /user/current returns (LoginResp)

	@doc "用户注销"
	@handler logout
	post /user/logout returns (BaseResp)

	@doc "获取用户信息"
	@handler getUserById
	get /user/get/:id returns (UserVO)
}

@server (
	jwt:    Auth
	prefix: api/v1
	group:  admin
)
service user {
	@doc "创建用户"
	@handler addUser
	post /user/add (UserAddReq) returns (RegisterResp)

	@doc "更新用户"
	@handler updateUser
	post /user/update (UserUpdateReq) returns (BaseResp)

	@doc "删除用户"
	@handler deleteUser
	post /user/delete/:id returns (BaseResp)

	@doc "分页获取用户列表"
	@handler listUserByPage
	post /user/list/page (UserQueryReq) returns (UserQueryResp)
}


